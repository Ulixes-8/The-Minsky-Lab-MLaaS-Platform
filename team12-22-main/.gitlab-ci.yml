image: alpine:latest

variables:
  CI_IMG: "\"${CI_REGISTRY_IMAGE}:latest\""
  TP_URL: "${CI_PROJECT_NAMESPACE}.bham.team"
  TP_CONTACT: "${GITLAB_USER_EMAIL}"
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA


stages:
  - test
  - prepare
  - build
  - deploy

test-django:
  stage: test
  image: python:3
  when: on_success
  before_script:
    - ls
    - cd ./backend
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
  script:
    - ls
    - python manage.py test --settings=TeamProject.settings.dev
  after_script:
    - deactivate
    - rm -rf /venv/
    - cd ..

clean-server:
  stage: prepare
  when: on_success
  script:
    - chmod og= $RSA
    - apk update && apk add openssh-client
    - ssh -o StrictHostKeyChecking=no -i $RSA $VM_USER@$VM "docker system prune -f || true"
    - ssh -o StrictHostKeyChecking=no -i $RSA $VM_USER@$VM "docker compose -f ~/team-project-deployment/docker-compose.yml down || true"
    - ssh -o StrictHostKeyChecking=no -i $RSA $VM_USER@$VM "docker rm -f $(docker ps -a -q) || true"
    - ssh -o StrictHostKeyChecking=no -i $RSA $VM_USER@$VM "docker volume rm $(docker volume ls -q) || true"
    - ssh -o StrictHostKeyChecking=no -i $RSA $VM_USER@$VM "rm -rf ~/team-project-deployment || true"
    - ssh -o StrictHostKeyChecking=no -i $RSA $VM_USER@$VM "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - scp -o StrictHostKeyChecking=no -i $RSA -r . $VM_USER@$VM:~/team-project-deployment
    - ssh -o StrictHostKeyChecking=no -i $RSA $VM_USER@$VM "sed -i '5s|teamproject|$CI_IMG|' ~/team-project-deployment/docker-compose.yml"
    - ssh -o StrictHostKeyChecking=no -i $RSA $VM_USER@$VM "cp -R ~/team12-22.bham.team ~/team-project-deployment/docker/nginx/ssl"

build-images:
  stage: build
  when: on_success
  script:
    - chmod og= $RSA
    - apk update && apk add openssh-client
    - ssh -o StrictHostKeyChecking=no -i $RSA $VM_USER@$VM "docker compose -f ~/team-project-deployment/docker-compose.yml build"


deploy-git:
  stage: deploy
  when: on_success
  script:
    - chmod og= $RSA
    - apk update && apk add openssh-client
    - ssh -o StrictHostKeyChecking=no -i $RSA $VM_USER@$VM "docker compose -f ~/team-project-deployment/docker-compose.yml up -d"